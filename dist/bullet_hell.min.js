!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e={BOOT_1_SCENE_KEY:"boot1",BOOT_2_SCENE_KEY:"boot2",FIGHT_SCENE_KEY:"fight",PAUSE_SCENE_KEY:"pause",KEY_TRACKER_KEY:"key_tracker",KEY_BINDINGS:{UP:{type:"cursor",key:"up"},DOWN:{type:"cursor",key:"down"},LEFT:{type:"cursor",key:"left"},RIGHT:{type:"cursor",key:"right"},SLOW:{type:"cursor",key:"shift"},FIRE:{type:"keyboard",key:"Y"},SPECIAL:{type:"keyboard",key:"X"},PAUSE:{type:"keyboard",key:"ESC"},ENTER:{type:"keyboard",key:"ENTER"}},BACKGROUND_ALPHA:.5,PAUSE_INPUT_DEBOUNCE_INITIAL_MS:500,PAUSE_INPUT_DEBOUNCE_QUICK_MS:250,PAUSE_OVERLAY_ALPHA:.94,PAUSE_MENU_UPPER_LEFT:{x:.05,y:.6},PAUSE_MENU_Y_OFFSET:.01,PLAYER_OFFSETS:{x:.5,y:.9},BOSS_OFFSETS:{x:.5,y:.1},BOSS_LIMITS:{x_min:0,x_max:1,y_min:0,y_max:.42},ASSET_PATH:"assets",MENU_ASSETS_FOLDER:"menu",PLAYER_JSON_PATH:"player",LEVEL_JSON_PATH:"levels",INVIS_FRAMES_AFTER_HIT:60,ENERGY_PASSIVE_ACCUMULATION:2,ENERGY_ACCUMULATION_INTERVAL:100,PLAYER_BLINK_DISTANCE:100,PLAYER_MAX_LIVES:99,ENERGY_METER:{MIDPOINT_OFFSETS:{x:.5,y:29/30},WIDTH:400,HEIGHT:20,BG_COLOR:16764108,FILL_COLOR:2728745,BORDER_WIDTH:4}},{PLAYER_MAX_LIVES:t}=e;class s{constructor(e){this.switchToState(e)}switchToState({lives:e,special:t}){e&&(this.cur_lives=e),t&&(t.energy=0,this.special=t)}getSpecialName(){return this.special.name}addToLives(e){this.cur_lives+=e,this.cur_lives>t?this.cur_lives=t:this.cur_lives<0&&(this.cur_lives=0)}addEnergy(e){this.special.energy+=e,this.special.energy>this.special.energy_required?this.special.energy=this.special.energy_required:this.special.energy<0&&(this.special.energy=0)}isSpecialReady(){return this.special.energy===this.special.energy_required}getEnergyPercentage(){return this.special.energy/this.special.energy_required}clearEnergy(){this.special.energy=0}isGameOver(){return this.cur_lives<=0}}function i(e,t,s=!0){return t=s?t:t*Math.PI/180,{x:e*Math.sin(t),y:e*Math.cos(t)}}class n{constructor(e,t,s,i,n,r,o){this.bar=e.add.graphics();const{x_min:a,y_min:h}=function(e,t,s){return{x_min:e.x-t/2,x_max:e.x+t/2,y_min:e.y-s/2,y_max:e.y+s/2}}(t,s,i);this.outer_rect={x:a,y:h,width:s,height:i},this.inner_rect={x:a+n,y:h+n,width:s-2*n,height:i-2*n},this.bg_color=r,this.fill_color=o}draw(e){this.bar.clear(),this.bar.fillStyle(this.bg_color),this.bar.fillRect(this.outer_rect.x,this.outer_rect.y,this.outer_rect.width,this.outer_rect.height),this.bar.fillStyle(this.fill_color);const t=this.inner_rect.width*e;this.bar.fillRect(this.inner_rect.x,this.inner_rect.y,t,this.inner_rect.height)}}function r(e,t,{distances:s,distFromVelocities:i,performMovement:n}){const r={x:!0,y:!0};i&&(s={x:o(e),y:a(e)});const{possible:h,rem:c}=function(e,{x_min:t,x_max:s},i){const n={possible:!0,rem:void 0};i<0?(n.rem=-function(e,t){return e.x-e.body.halfWidth-t}(e,t),i<n.rem&&(n.possible=!1)):i>0&&(n.rem=function(e,t){return t-(e.x+e.body.halfWidth)}(e,s),i>n.rem&&(n.possible=!1));return n}(e,t,s.x);h?n&&(e.x+=s.x):(e.x+=c,r.x=!1);const{possible:_,rem:l}=function(e,{y_min:t,y_max:s},i){const n={possible:!0,rem:void 0};i<0?(n.rem=-function(e,t){return e.y-e.body.halfHeight-t}(e,t),i<n.rem&&(n.possible=!1)):i>0&&(n.rem=function(e,t){return t-(e.y+e.body.halfHeight)}(e,s),i>n.rem&&(n.possible=!1));return n}(e,t,s.y);return _?n&&(e.y+=s.y):(e.y+=l,r.y=!1),r}function o(e){return e.body._dx}function a(e){return e.body._dy}function h({x:e,y:t},{width:s,height:i}){return{x:e*s,y:t*i}}const{ENERGY_METER:c}=e;class _{constructor(e){const{x:t,y:s}=h(c.MIDPOINT_OFFSETS,e.scale);this.energy_meter=new n(e,{x:t,y:s},c.WIDTH,c.HEIGHT,c.BORDER_WIDTH,c.BG_COLOR,c.FILL_COLOR)}syncWithGameState(e){const t=e.getEnergyPercentage();this.energy_meter.draw(t)}}function l(e,t,s,n){const r=[];return t.forEach(t=>{r.push(function(e,t,s,n){let{shot_id:r,x_offset:o,y_offset:a,anchor:h,x_velo:c,y_velo:_,degree:l,speed:d}=t;const{x:u,y:y,width:m,height:E}=s;let p=u+o,v=y+a;switch(h){case"Top":v-=E/2;break;case"Bottom":v+=E/2;break;case"Left":p-=m/2;break;case"Right":p+=m/2}const g=e.physics.add.image(p,v,r);n&&n.add(g);void 0===c&&({x:c,y:_}=i(d,l,!1));g.setVelocityX(c),g.setVelocityY(_)}(e,t,s,n))}),r}const{PLAYER_OFFSETS:d}=e;class u{constructor({asset_folder:e,weapon:t,movement:s,invincibility_window:i}){this.asset_folder=e,this.weapon={fire_rate:t.fire_rate,shots:t.shots,cooldown:0},this.movement=s,this.invis_frames={max:i,active:!1},this.sprite=null}getSprite(){return this.sprite}isInvincible(){return this.invis_frames.active}create(e){const{x:t,y:s}=h(d,e.scale),i=e.physics.add.image(t,s,"player_sprite");return i.setCollideWorldBounds(!0),i.setDepth(1),this.sprite=i,i}update(e,t,s){this._updateMovement(t),this._createShots(e,t,s)}_updateMovement(e){const{UP:t,DOWN:s,LEFT:i,RIGHT:n,SLOW:r}=e,o=r?this.movement.slowed:this.movement.normal;let a=0,h=0;t&&(h-=o),s&&(h+=o),i&&(a-=o),n&&(a+=o),this.sprite.setVelocityX(a),this.sprite.setVelocityY(h)}_createShots(e,t,s){const{FIRE:i}=t;i&&(this.weapon.cooldown<=0?(this.weapon.cooldown=this.weapon.fire_rate,l(e,this.weapon.shots,this.sprite,s)):this.weapon.cooldown--)}triggerInvincibility(e){this.invis_frames.active=!0,e.time.addEvent({delay:this.invis_frames.max,callback:()=>{this.invis_frames.active=!1}})}}class y{constructor(){this.routines=[],this.cur_routine=0}addRoutine(e){this.routines.push(e)}isCurrentRoutineFinished(){return this.getCurrentRoutine().isFinished()}existNextRoutine(){return this.cur_routine<this.routines.length-1}advanceRoutine(){this.cur_routine++}getCurrentRoutine(){return this.routines[this.cur_routine]}getNextMoves(){return this.getCurrentRoutine().getMovesCurrentTime()}disableOngoingXMovement(){this.getCurrentRoutine().disableOngoingXMovement()}disableOngoingYMovement(){this.getCurrentRoutine().disableOngoingYMovement()}getNextShots(){return this.getCurrentRoutine().getShotsCurrentTime()}applyDamage(e){this.getCurrentRoutine().applyDamage(e)}updateCurrentRoutine(){this.getCurrentRoutine().advanceTimer()}}function m(e,t){return e[t%e.length]}function E(e,t,s){const i=[];let n=e;for(;n<=t;)i.push(n),n+=s;return i}class p{constructor({name:e,loops:t,duration:s,hp:i}){this.name=e,this.loops=t,this.duration=s,this.has_hp=void 0!==i,this.max_hp=i,this.cur_hp=i,this.moves={},this.shots={},this.time=0,this.ongoing_movement={x_acceleration:0,y_acceleration:0,x_velo:0,y_velo:0,can_leave:!0}}applyDamage(e){this.has_hp&&(this.cur_hp-=e)}advanceTimer(){this.time++,this.loops&&this.time>this.duration&&(this.time=0)}isFinished(){return this.time>this.duration||this.has_hp&&this.cur_hp<=0}addMovesByDescription(e){switch(e.type){case"Stop":this.addStopMoves(e.times);break;case"Randomized":this.addMovesFromRandomizedMoves(e);break;case"Fixed":default:this.addMovesFromFixedMoves(e)}}addMovesFromFixedMoves(e){e.can_leave=!0;const t=this.reduceMoveDescToMove(e);e.times.forEach(e=>{this.addSingleMove(t,e)})}addMovesFromRandomizedMoves(e){e.can_leave=!1;const t=this.reduceMoveDescToMove(e);e.times.forEach(e=>{this.addSingleMove(t,e)})}addStopMoves(e){const t={type:"Fixed",x_acceleration:0,y_acceleration:0,x_velo:0,y_velo:0,can_leave:!0};e.forEach(e=>{this.addSingleMove(t,e)})}reduceMoveDescToMove(e){const t=Object.assign({},e);return delete t.times,t}addSingleMove(e,t){this.moves[t]=e}getMovesCurrentTime(){const e=this.moves[this.time];if(e)switch(e.type){case"Fixed":this.setOngoingMovement(e);break;case"Randomized":this.setOngoingMovementFromRandom(e)}return this.ongoing_movement}setOngoingMovementFromRandom(e){const{x_velo_range:t,y_velo_range:s}=e;e.x_velo=Phaser.Math.Between(t[0],t[1]),e.y_velo=Phaser.Math.Between(s[0],s[1]),this.setOngoingMovement(e)}setOngoingMovement(e){this.ongoing_movement={x_acceleration:e.x_acceleration,y_acceleration:e.y_acceleration,x_velo:e.x_velo,y_velo:e.y_velo,can_leave:e.can_leave}}disableOngoingXMovement(){this.ongoing_movement.x_acceleration=0,this.ongoing_movement.x_velo=0}disableOngoingYMovement(){this.ongoing_movement.y_acceleration=0,this.ongoing_movement.y_velo=0}addShotsByDescription(e){switch(e.type){case"ShotArray":this.addShotsFromShotArray(e);break;case"ShotRow":this.addShotsFromShotRow(e);break;case"ShotCircle":this.addShotsFromShotCircle(e);break;case"ShotTwister":this.addShotsFromShotTwister(e)}}addShotsFromShotArray(e){const{times:t,shots:s,anchor:i}=e;s.forEach(e=>{t.forEach(t=>{this.addSingleShot(e,t,i)})})}addShotsFromShotRow(e){let{nr_shots:t,anchor:s,shot_ids:i,speeds:n,degrees:r,x_offset_start:o,x_offset_end:a,y_offset:h,continuous:c,times:_,interval:l,start_time:d}=e;c&&(_=E(d,this.duration,l));const u=(a-o)/t;for(let e=0;e<t;++e){const t={shot_id:m(i,e),speed:m(n,e),degree:m(r,e),x_offset:o+u*e,y_offset:h};_.forEach(e=>{this.addSingleShot(t,e,s)})}}addShotsFromShotCircle(e){let{nr_shots:t,anchor:s,shot_ids:n,speeds:r,shot_spread:o,degrees:a,x_offset:h,y_offset:c,continuous:_,times:l,interval:d,start_time:u,start_degree:y,end_degree:p,radius:v}=e;_&&(l=E(u,this.duration,d)),y=void 0!==y?y:0,p=void 0!==p?p:360;const g=(p-y)/t;for(let e=0;e<t;++e){const t=y+g*e,{x:_,y:d}=i(v,t,!1),u=o?t:m(a,e),E={shot_id:m(n,e),speed:m(r,e),degree:u,x_offset:h+_,y_offset:c+d};l.forEach(e=>{this.addSingleShot(E,e,s)})}}addShotsFromShotTwister(e){let{anchor:t,x_offset:s,y_offset:n,speeds:r,start_degree:o,finish_degree:a,direction:h,degree_offset:c,shot_ids:_,start_time:l,time_interval:d,radius:u,continuous:y,repeat_interval:E}=e;const p=a-o,v=Math.floor(p/c);if(v<=0)return;const g=(v-1)*d,S="clockwise"===h?1:-1;let f=o,x=l;for(let e=0;e<v;++e){const{x:o,y:a}=i(u,f,!1),h={shot_id:m(_,e),speed:m(r,e),degree:f,x_offset:s+o,y_offset:n+a};let l=[];if(y){let e=x;for(;e<this.duration;)l.push(e),e+=g+E}else l.push(x);l.forEach(e=>{this.addSingleShot(h,e,t)}),f+=S*c,x+=d}}addSingleShot({shot_id:e,speed:t,degree:s,x_offset:n,y_offset:r},o,a){const{x:h,y:c}=i(t,s,!1);this.shots.hasOwnProperty(o)||(this.shots[o]=[]),this.shots[o].push({shot_id:e,x_offset:n,y_offset:r,anchor:a,x_velo:h,y_velo:c})}getShotsCurrentTime(){return this.shots[this.time]}}const{BOSS_LIMITS:v,BOSS_OFFSETS:g}=e;class S{constructor(e,{type:t,id:s,routines:i},n){this._createEventTracker(e,i),this._createSprite(e,s,n),this._setMovementLimits(e,t)}_createEventTracker(e,t){const s=new y;t.forEach(({name:t})=>{s.addRoutine(function(e){const t=new p(e);return e.moves&&e.moves.forEach(e=>{t.addMovesByDescription(e)}),e.shots&&e.shots.forEach(e=>{t.addShotsByDescription(e)}),t}(e.cache.json.get(t)))}),this.event_tracker=s}_createSprite(e,t,s){const{x:i,y:n}=h(g,e.scale),r=e.physics.add.image(i,n,t);r.setDepth(1),s.add(r),this.sprite=r}_setMovementLimits(e,t){const{width:s,height:i}=e.scale;let n;switch(this.limits={},t){case"boss":n=v;break;default:n={x_min:void 0,x_max:void 0,y_min:void 0,y_max:void 0}}["x_min","x_max"].forEach(e=>{void 0===n[e]?this.limits[e]=void 0:this.limits[e]=n[e]*s}),["y_min","y_max"].forEach(e=>{void 0===n[e]?this.limits[e]=void 0:this.limits[e]=n[e]*i})}update(e,t){this._handleRoutineTransition()&&(this._updateMovement(),this._createShots(e,t),this.event_tracker.updateCurrentRoutine())}_handleRoutineTransition(){if(this.event_tracker.isCurrentRoutineFinished()){if(!this.event_tracker.existNextRoutine())return!1;this.event_tracker.advanceRoutine()}return!0}_updateMovement(){let{x_acceleration:e,y_acceleration:t,x_velo:s,y_velo:i,can_leave:n}=this.event_tracker.getNextMoves();if(!n){const{x:e,y:t}=r(this.sprite,this.limits,{distFromVelocities:!0});e||(this.event_tracker.disableOngoingXMovement(),s=0),t||(this.event_tracker.disableOngoingYMovement(),i=0)}this.sprite.setVelocityX(s),this.sprite.setVelocityY(i),this.sprite.setAccelerationX(e),this.sprite.setAccelerationY(t)}_createShots(e,t){const s=this.event_tracker.getNextShots();s&&l(e,s,this.sprite,t)}}const{ASSET_PATH:f}=e;function x(e){return`${f}/${e}`}const{BACKGROUND_ALPHA:A}=e;class O{constructor(e){this.asset_folder=e.folder,this.parallaxes=e.parallaxes}preload(e,t){this.parallaxes.forEach(({background_id:s})=>{const i=x(`${this.asset_folder}/${t[s]}`);e.load.image(s,i)})}create(e){this.parallaxes.forEach(t=>{this._createParallax(e,t)})}_createParallax(e,t){const s=t.background_id,{height:i}=e.scale,n=e.textures.get(s),{width:r}=n.frames.__BASE,o=e.add.tileSprite(r/2,i/2,r,i,s);o.setAlpha(A),t.tile_sprite=o}update(){this.parallaxes.forEach(({tile_sprite:e,scroll_speed_x:t,scroll_speed_y:s})=>{t&&(e.tilePositionX-=t),s&&(e.tilePositionY-=s)})}}function T(e){e.destroy()}const{PLAYER_BLINK_DISTANCE:L}=e;function R(e,t,s,n){if(!t.isSpecialReady())return;const{SPECIAL:o}=e;o&&(!function(e,t,s,n){switch(e){case"blink":!function(e,t,s){const{UP:n,DOWN:o,LEFT:a,RIGHT:h}=e,c={up:n&&!o,down:o&&!n,left:a&&!h,right:h&&!a};let _;_=c.up?c.left?225:c.right?135:180:c.down?c.left?315:c.right?45:0:c.left?270:c.right?90:180;const l={distances:i(L,_,!1),performMovement:!0,distFromVelocities:!1};r(s.getSprite(),t,l)}(s,t,n)}}(t.getSpecialName(),s,e,n),t.clearEnergy())}const{FIGHT_SCENE_KEY:b,PAUSE_SCENE_KEY:P,ENERGY_ACCUMULATION_INTERVAL:K,ENERGY_PASSIVE_ACCUMULATION:k}=e;let I=0;const N={};class M extends Phaser.Scene{constructor(){super({key:b})}init(e){this.limits=function({x:e,y:t,width:s,height:i}){return{x_min:e,x_max:e+s,y_min:t,y_max:t+i}}({x:0,y:0,width:this.scale.width,height:this.scale.height});const t=this.cache.json.get("level_base_info"),i=this.cache.json.get("player_info");this.GLOBAL=e,this.game_state=new s(i),this.UI=new _(this),this.player=new u(i),this.background=new O(t.background),this.active_enemies=[]}preload(){this.preloadLevelAssets(),this.setUpEventTimeline();const e=this.cache.json.get("player_info"),{asset_folder:t}=e;this.load.image("player_sprite",x(t+"/sprite.png")),this.load.image("player_bullet",x(t+"/bullet.png"));const s=this.cache.json.get("level_asset_info");this.background.preload(this,s)}preloadLevelAssets(){Object.entries(this.cache.json.get("level_asset_info")).forEach(([e,t])=>{this.load.image(e,x(t))})}setUpEventTimeline(){this.cache.json.get("level_event_info").forEach(e=>{switch(e.type){case"enemy":this.addEnemyEvent(e)}})}addEnemyEvent({time:e,id:t}){N.hasOwnProperty(e)||(N[e]=[]),N[e].push(t)}create(){this.player_bullets=this.physics.add.group(),this.enemy_bullets=this.physics.add.group(),this.deadly_enemies=this.physics.add.group(),this.background.create(this),this.UI.syncWithGameState(this.game_state);const e=this.player.create(this),t=()=>{var e,t,s;e=this,t=this.player,s=this.game_state,t.isInvincible()||(s.addToLives(-1),t.triggerInvincibility(e))};this.physics.add.overlap(e,this.deadly_enemies,t),this.physics.add.overlap(e,this.enemy_bullets,t),this.physics.add.overlap(this.player_bullets,this.deadly_enemies,T),this._startRepeatingTimer(K,()=>{this.game_state.addEnergy(k)})}_startRepeatingTimer(e,t){const s=()=>{this.time.addEvent({delay:e,callback:()=>{t(),s()}})};s()}update(){this.pauseGameIfRequested();const e=this.GLOBAL.KEY_TRACKER.active_keys;this.background.update(),this.UI.syncWithGameState(this.game_state),this.player.update(this,e,this.player_bullets),R(e,this.game_state,this.limits,this.player),this.createNewEnemies(),this.active_enemies.forEach(e=>{e.update(this,this.enemy_bullets)}),this.removeBulletsOutOfBounds(this.player_bullets),this.removeBulletsOutOfBounds(this.enemy_bullets),I++}pauseGameIfRequested(){const{PAUSE:e}=this.GLOBAL.KEY_TRACKER.active_keys;e&&this.pauseGame()}pauseGame(){this.GLOBAL.PAUSE_SCENE_LAUNCHED?this.scene.wake(P):(this.scene.launch(P,this.GLOBAL),this.GLOBAL.PAUSE_SCENE_LAUNCHED=!0),this.scene.pause()}createNewEnemies(){N[I]&&N[I].forEach(e=>{const t=this.cache.json.get(e),s=new S(this,t,this.deadly_enemies);this.active_enemies.push(s)})}removeBulletsOutOfBounds(e){const{width:t,height:s}=this.scale;e.children.entries.forEach(e=>{const{x:i,y:n,width:r,height:o}=e;(i+r<0||i-r>t||n+o<0||n-o>s)&&e.destroy()})}}const C={UP:!1,DOWN:!1,LEFT:!1,RIGHT:!1,SLOW:!1,FIRE:!1,SPECIAL:!1,PAUSE:!1,ENTER:!1};class w{constructor(){this.active_keys=Object.assign({},C),this.pressed_keys=Object.assign({},C),this.first_pressed=Object.assign({},C),this.blocked=Object.assign({},C)}setKeyActivity(e,t){t?this.setKeyActive(e):this.setKeyInactive(e)}setKeyActive(e){this.active_keys[e]=!0}setKeyInactive(e){this.active_keys[e]=!1}setKeyPressed(e,t){t?this.markKeyDown(e):this.markKeyUp(e)}markKeyDown(e){this.pressed_keys[e]?this.first_pressed[e]=!1:(this.pressed_keys[e]=!0,this.first_pressed[e]=!0)}markKeyUp(e){this.pressed_keys[e]=!1,this.first_pressed[e]=!1}removeAllBlocks(){this.blocked=Object.assign({},C)}setKeyBlocked(e){this.blocked[e]=!0}setKeyUnblocked(e){this.blocked[e]=!1}debounceKey(e,t,s){return this.setKeyBlocked(e),s.time.addEvent({delay:t,callback:()=>{this.setKeyUnblocked(e)}})}}const{BOOT_1_SCENE_KEY:U,BOOT_2_SCENE_KEY:F,KEY_TRACKER_KEY:B,PLAYER_JSON_PATH:G,KEY_BINDINGS:Y,LEVEL_JSON_PATH:D}=e;class H extends Phaser.Scene{constructor(){super({key:U})}init(e){Object.keys(e).length?this.GLOBAL=e:this.GLOBAL={LEVEL_ID:"level_1",KEY_BINDINGS:Y,KEY_TRACKER:new w,PAUSE_SCENE_LAUNCHED:!1}}preload(){const{LEVEL_ID:e}=this.GLOBAL;this.load.json("player_info",G+"/kuglis.json"),this.load.json("level_base_info",`${D}/${e}/level_info.json`),this.load.json("level_event_info",`${D}/${e}/events.json`),this.load.json("level_json_keys",`${D}/${e}/json_keys.json`),this.load.json("level_asset_info",`${D}/${e}/asset_map.json`)}create(){this.scene.launch(B,this.GLOBAL),this.scene.start(F,this.GLOBAL)}}const{BOOT_2_SCENE_KEY:j,FIGHT_SCENE_KEY:V,LEVEL_JSON_PATH:W}=e;class $ extends Phaser.Scene{constructor(){super({key:j})}init(e){this.GLOBAL=e}preload(){const{LEVEL_ID:e}=this.GLOBAL;Object.entries(this.cache.json.get("level_json_keys")).forEach(([t,s])=>{this.load.json(t,`${W}/${e}/${s}`)})}create(){this.scene.start(V,this.GLOBAL)}}const{FIGHT_SCENE_KEY:X,PAUSE_SCENE_KEY:q,ASSET_PATH:J,MENU_ASSETS_FOLDER:z,PAUSE_INPUT_DEBOUNCE_INITIAL_MS:Q,PAUSE_INPUT_DEBOUNCE_QUICK_MS:Z,PAUSE_OVERLAY_ALPHA:ee,PAUSE_MENU_UPPER_LEFT:te,PAUSE_MENU_Y_OFFSET:se}=e,ie={continue:{selected:"continue_selected",unselected:"continue_unselected"},restart:{selected:"restart_selected",unselected:"restart_unselected"},exit:{selected:"exit_selected",unselected:"exit_unselected"}};class ne extends Phaser.Scene{constructor(){super({key:q})}init(e){this.GLOBAL=e,this.menu_items=["continue","restart","exit"],this.menu_images={},this.current_idx=0,this.time_events={},this.next_item_position=h(te,this.scale),this.item_y_offset=se*this.scale.height,this.can_accept_fire_key=!1,this.can_accept_enter_key=!1}incrementMenuIndex(){this.current_idx++,this.current_idx===this.menu_items.length&&(this.current_idx=0)}decrementMenuIndex(){this.current_idx--,this.current_idx<0&&(this.current_idx=this.menu_items.length-1)}preload(){this.load.image("overlay",this.makeAssetPath("overlay.png")),Object.values(ie).forEach(({selected:e,unselected:t})=>{[e,t].forEach(e=>{this.load.image(e,this.makeAssetPath(e+".png"))})})}makeAssetPath(e){return`${J}/${z}/${e}`}create(){this.createOverlay();for(const e in ie){const t=this.createMenuItem(e);this.moveNextItemPosition(t)}this.setSceneToFreshState(),this.events.on("wake",()=>{this.setSceneToFreshState()})}setSceneToFreshState(){this.current_idx=0,this.showCorrectSelection(),this.can_accept_fire_key=!1,this.can_accept_enter_key=!1}createOverlay(){const{width:e,height:t}=this.scale,s=this.add.tileSprite(e/2,t/2,e,t,"overlay");s.setAlpha(ee),this.overlay=s}createMenuItem(e){const{selected:t,unselected:s}=ie[e],{x:i,y:n}=this.next_item_position,r=this.add.image(i,n,t).setOrigin(0),o=this.add.image(i,n,s).setOrigin(0);return this.menu_images[e]={selected:r,unselected:o},r}moveNextItemPosition(e){this.next_item_position.y+=this.item_y_offset+e.height}update(){const e=this.GLOBAL.KEY_TRACKER,{PAUSE:t}=e.active_keys;t?this.endPause():(this.changeProceedKeysAcceptance(),this.handleMenuItemSelection()||(this.updateMenuInformation(),this.showCorrectSelection()))}changeProceedKeysAcceptance(){const e=this.GLOBAL.KEY_TRACKER,{FIRE:t,ENTER:s}=e.pressed_keys;t||(this.can_accept_fire_key=!0),s||(this.can_accept_enter_key=!0)}handleMenuItemSelection(){const{FIRE:e,ENTER:t}=this.GLOBAL.KEY_TRACKER.active_keys,s=e&&this.can_accept_fire_key,i=t&&this.can_accept_enter_key;return!(!s&&!i)&&(this.handleCurrentMenuItem(),!0)}handleCurrentMenuItem(){switch(this.menu_items[this.current_idx]){case"continue":this.endPause()}}updateMenuInformation(){this.checkDirectionForMenuUpdate("UP"),this.checkDirectionForMenuUpdate("DOWN")}checkDirectionForMenuUpdate(e){let t;switch(e){case"UP":t=this.decrementMenuIndex.bind(this);break;case"DOWN":t=this.incrementMenuIndex.bind(this)}const s=this.GLOBAL.KEY_TRACKER,i=s.pressed_keys[e],n=s.first_pressed[e],r=s.active_keys[e];if(!i)return s.setKeyUnblocked(e),void this.clearTimeEventsOfKey(e);if(r){const i=n?Q:Z;t(),this.addDebounceEvent(s,e,i)}}addDebounceEvent(e,t,s){const i=e.debounceKey(t,s,this);this.time_events[t]||(this.time_events[t]=[]),this.time_events[t].push(i)}clearTimeEvents(){for(const e in this.time_events)this.clearTimeEventsOfKey(e)}clearTimeEventsOfKey(e){this.time_events.hasOwnProperty(e)&&this.time_events[e].forEach(e=>{e.destroy()})}showCorrectSelection(){const e=this.menu_items[this.current_idx];for(const t in this.menu_images){let s,i;const{selected:n,unselected:r}=this.menu_images[t];e===t?(s=n,i=r):(s=r,i=n),s.visible=!0,i.visible=!1}}endPause(){this.clearTimeEvents(),this.GLOBAL.KEY_TRACKER.removeAllBlocks(),this.scene.sleep(),this.scene.resume(X)}}const{KEY_TRACKER_KEY:re}=e;class oe extends Phaser.Scene{constructor(){super({key:re})}init(e){this.GLOBAL=e}create(){this.cursors=this.input.keyboard.createCursorKeys();const{UP:e,DOWN:t,LEFT:s,RIGHT:i,SLOW:n,FIRE:r,SPECIAL:o,PAUSE:a,ENTER:h}=this.GLOBAL.KEY_BINDINGS;this.up=this._createPhaserKey(e),this.down=this._createPhaserKey(t),this.left=this._createPhaserKey(s),this.right=this._createPhaserKey(i),this.slow=this._createPhaserKey(n),this.firing=this._createPhaserKey(r),this.special=this._createPhaserKey(o),this.enter=this._createPhaserKey(h),this.pause=this._createPhaserKey(a),this.pause_pressed=!1}_createPhaserKey({type:e,key:t}){switch(e){case"cursor":return this._createPhaserCursorKey(t);case"keyboard":return this._createPhaserKeyboardKey(t)}}_createPhaserCursorKey(e){return this.cursors[e]}_createPhaserKeyboardKey(e){return this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes[e])}update(){this._setGlobalKey("UP",this.up),this._setGlobalKey("DOWN",this.down),this._setGlobalKey("LEFT",this.left),this._setGlobalKey("RIGHT",this.right),this._setGlobalKey("SLOW",this.slow),this._setGlobalKey("FIRE",this.firing),this._setGlobalKey("SPECIAL",this.special),this._setGlobalKey("ENTER",this.enter),this._updatePausePossibility("PAUSE",this.pause)}_setGlobalKey(e,t){const{pressed:s,active:i}=this._determineNextKeyState(e,t);this._setKeyTrackerNextKeyState(e,s,i)}_updatePausePossibility(e,t){const{pressed:s,active:i}=this._determineNextKeyState(e,t);let n=!1;i?(this.pause_pressed||(n=!0),this.pause_pressed=!0):this.pause_pressed=!1,this._setKeyTrackerNextKeyState(e,s,n)}_determineNextKeyState(e,t){const s=t.isDown,i={pressed:s,active:s},{blocked:n}=this.GLOBAL.KEY_TRACKER;return n[e]&&(i.active=!1),i}_setKeyTrackerNextKeyState(e,t,s){const i=this.GLOBAL.KEY_TRACKER;i.setKeyPressed(e,t),i.setKeyActivity(e,s)}}const ae={type:Phaser.AUTO,width:window.innerWidth,height:window.innerHeight,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[H,$,oe,M,ne]};window.game=new Phaser.Game(ae)}));