!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e={UP:{type:"cursor",key:"up"},DOWN:{type:"cursor",key:"down"},LEFT:{type:"cursor",key:"left"},RIGHT:{type:"cursor",key:"right"},SLOW:{type:"cursor",key:"shift"},FIRE:{type:"keyboard",key:"Y"},PAUSE:{type:"keyboard",key:"ESC"}},t=.5,s=.9,i=.5,o=.1;class a{constructor(e){this.id=e,this.routines=[],this.cur_routine=0}addRoutine(e){this.routines.push(e)}existNextRoutine(){return this.cur_routine<this.routines.length-1}advanceRoutine(){this.cur_routine++}getCurrentRoutine(){return this.routines[this.cur_routine]}getNextMoves(){return this.getCurrentRoutine().getMovesCurrentTime()}getNextShots(){return this.getCurrentRoutine().getShotsCurrentTime()}applyDamage(e){this.getCurrentRoutine().applyDamage(e)}updateCurrentRoutine(){this.getCurrentRoutine().advanceTimer()}}function h(e,t,s=!0){return t=s?t:t*Math.PI/180,{x:e*Math.sin(t),y:e*Math.cos(t)}}function r(e,t){return e[t%e.length]}function n(e,t,s){const i=[];let o=e;for(;o<=t;)i.push(o),o+=s;return i}class c{constructor({name:e,loops:t,duration:s,hp:i}){this.name=e,this.loops=t,this.duration=s,this.has_hp=void 0!==i,this.max_hp=i,this.cur_hp=i,this.moves={},this.shots={},this.time=0,this.ongoing_movement={x_acceleration:0,y_acceleration:0,x_velo:0,y_velo:0,can_leave:!0}}applyDamage(e){this.has_hp&&(this.cur_hp-=e)}advanceTimer(){this.time++,this.loops&&this.time>this.duration&&(this.time=0)}isFinished(){return this.time>this.duration||this.has_hp&&this.cur_hp<=0}addMovesByDescription(e){switch(e.type){case"Stop":this.addStopMoves(e.times);break;case"Randomized":this.addMovesFromRandomizedMoves(e);break;case"Fixed":default:this.addMovesFromFixedMoves(e)}}addMovesFromFixedMoves(e){e.can_leave=!0;const t=this.reduceMoveDescToMove(e);e.times.forEach(e=>{this.addSingleMove(t,e)})}addMovesFromRandomizedMoves(e){e.can_leave=!1;const t=this.reduceMoveDescToMove(e);e.times.forEach(e=>{this.addSingleMove(t,e)})}addStopMoves(e){const t={type:"Fixed",x_acceleration:0,y_acceleration:0,x_velo:0,y_velo:0,can_leave:!0};e.forEach(e=>{this.addSingleMove(t,e)})}reduceMoveDescToMove(e){const t=Object.assign({},e);return delete t.times,t}addSingleMove(e,t){this.moves[t]=e}getMovesCurrentTime(){const e=this.moves[this.time];return e&&(this.ongoing_movement=Object.assign(e)),this.ongoing_movement}addShotsByDescription(e){switch(e.type){case"ShotArray":this.addShotsFromShotArray(e);break;case"ShotRow":this.addShotsFromShotRow(e);break;case"ShotCircle":this.addShotsFromShotCircle(e)}}addShotsFromShotArray(e){const{times:t,shots:s,anchor:i}=e;s.forEach(e=>{t.forEach(t=>{this.addSingleShot(e,t,i)})})}addShotsFromShotRow(e){let{nr_shots:t,anchor:s,shot_ids:i,speeds:o,degrees:a,x_offset_start:h,x_offset_end:c,y_offset:d,continuous:l,times:u,interval:p,start_time:y}=e;l&&(u=n(y,this.duration,p));const _=(c-h)/t;for(let e=0;e<t;++e){const t={shot_id:r(i,e),speed:r(o,e),degree:r(a,e),x_offset:h+_*e,y_offset:d};u.forEach(e=>{this.addSingleShot(t,e,s)})}}addShotsFromShotCircle(e){let{nr_shots:t,anchor:s,shot_ids:i,speeds:o,shot_spread:a,degrees:c,x_offset:d,y_offset:l,continuous:u,times:p,interval:y,start_time:_,start_degree:m,end_degree:f,radius:g}=e;u&&(p=n(_,this.duration,y)),m=void 0!==m?m:0,f=void 0!==f?f:360;const v=(f-m)/t;for(let e=0;e<t;++e){const t=m+v*e,{x:n,y:u}=h(g,t,!1),y=a?t:r(c,e),_={shot_id:r(i,e),speed:r(o,e),degree:y,x_offset:d+n,y_offset:l+u};p.forEach(e=>{this.addSingleShot(_,e,s)})}}addSingleShot({shot_id:e,speed:t,degree:s,x_offset:i,y_offset:o},a,r){const{x:n,y:c}=h(t,s,!1);this.shots.hasOwnProperty(a)||(this.shots[a]=[]),this.shots[a].push({shot_id:e,x_offset:i,y_offset:o,anchor:r,x_velo:n,y_velo:c})}getShotsCurrentTime(){return this.shots[this.time]}}let d,l,u,p,y=0,_=0,m=0;const f={},g=[],v={};let S=0;class E extends Phaser.Scene{constructor(){super({key:"fight"})}init(e){this.GLOBAL=e,this.can_pause=!0}preload(){this.preloadLevelAssets(),this.setUpEventTimeline();const{asset_folder:e,weapon:t}=this.cache.json.get("player_info");_=t.fire_rate,this.load.image("player_sprite",this.makeAssetPath(e+"/sprite.png")),this.load.image("player_bullet",this.makeAssetPath(e+"/bullet.png")),this.load.image("background_shapes",this.makeAssetPath("level 1/parallax_1.png"))}makeAssetPath(e){return"assets/"+e}preloadLevelAssets(){Object.entries(this.cache.json.get("level_asset_info")).forEach(([e,t])=>{this.load.image(e,this.makeAssetPath(t))})}setUpEventTimeline(){this.cache.json.get("level_event_info").forEach(e=>{switch(e.type){case"enemy":this.addEnemyEvent(e)}})}addEnemyEvent({time:e,id:t}){f.hasOwnProperty(e)||(f[e]=[]),f[e].push(t)}create(){const{width:e,height:i}=this.scale;this.setUpBackground(e,i),l=this.physics.add.group(),u=this.physics.add.group(),p=this.physics.add.group(),d=this.physics.add.image(e*t,i*s,"player_sprite"),d.setCollideWorldBounds(!0),d.setDepth(1),this.physics.add.overlap(d,p,this.handlePlayerHit,null,this),this.physics.add.overlap(d,u,this.handlePlayerHit,null,this)}setUpBackground(e,t){const s=this.textures.get("background_shapes"),{width:i}=s.frames.__BASE;this.firstParallax=this.add.tileSprite(i/2,t/2,i,t,"background_shapes"),this.firstParallax.setAlpha(.5)}handlePlayerHit(){S?S--:S=60}update(){this.pauseGameIfRequested(),this.updateBackground(),this.playerMove(),this.playerFire(),this.createNewEnemies(),this.updateEnemies(),this.removeBulletsOutOfBounds(l),this.removeBulletsOutOfBounds(u),m++}pauseGameIfRequested(){const{PAUSE:e}=this.GLOBAL.KEYS;e&&this.pauseGame()}pauseGame(){this.scene.launch("pause",this.GLOBAL),this.scene.pause()}updateBackground(){this.firstParallax.tilePositionY-=2}playerMove(){const{UP:e,DOWN:t,LEFT:s,RIGHT:i,SLOW:o}=this.GLOBAL.KEYS,{movement:a}=this.cache.json.get("player_info"),h=o?a.slowed:a.normal;let r=0,n=0;e&&(n-=h),t&&(n+=h),s&&(r-=h),i&&(r+=h),d.setVelocityX(r),d.setVelocityY(n)}playerFire(){const{FIRE:e}=this.GLOBAL.KEYS,{weapon:t}=this.cache.json.get("player_info");if(e)if(0===y){l.create(d.x,d.y-d.height,"player_bullet").setVelocityY(-t.bullet_speed),y=_}else y--}createNewEnemies(){if(!f[m])return;const{width:e,height:t}=this.scale;f[m].forEach(s=>{const a=this.physics.add.image(e*i,t*o,s);a.setDepth(1),p.add(a),v[s]=a,this.addEnemyInfo(s)})}addEnemyInfo(e){const t=new a(e);this.cache.json.get(e).routines.forEach(({name:e})=>{t.addRoutine(function(e){const t=new c(e);return e.moves&&e.moves.forEach(e=>{t.addMovesByDescription(e)}),e.shots&&e.shots.forEach(e=>{t.addShotsByDescription(e)}),t}(this.cache.json.get(e)))}),g.push(t)}updateEnemies(){g.forEach(e=>{const t=v[e.id],s=e.getNextMoves();this.updateEnemyMovement(t,s);const i=e.getNextShots();i&&i.forEach(e=>{this.createNewEnemyShot(e,t)}),e.updateCurrentRoutine()})}updateEnemyMovement(e,t){const{x_acceleration:s,y_acceleration:i,can_leave:o}=t;let a,h;switch(t.type){case"Randomized":const{x_velo_range:e,y_velo_range:s}=t;a=Phaser.Math.Between(e[0],e[1]),h=Phaser.Math.Between(s[0],s[1]);break;case"Fixed":a=t.x_velo,h=t.y_velo}e.setCollideWorldBounds(!o),e.setVelocityX(a),e.setVelocityY(h),e.setAccelerationX(s),e.setAccelerationY(i)}createNewEnemyShot(e,{x:t,y:s,width:i,height:o}){const{shot_id:a,x_offset:h,y_offset:r}=e;let n=t+h,c=s+r;switch(e.anchor){case"Top":c-=o/2;break;case"Bottom":c+=o/2;break;case"Left":n-=i/2;break;case"Right":n+=i/2}const d=this.physics.add.image(n,c,a);u.add(d);const{x_velo:l,y_velo:p}=e;d.setVelocityX(l),d.setVelocityY(p)}removeBulletsOutOfBounds(e){const{width:t,height:s}=this.scale;e.children.entries.forEach(e=>{const{x:i,y:o,width:a,height:h}=e;(i+a<0||i-a>t||o+h<0||o-h>s)&&e.destroy()})}}class L extends Phaser.Scene{constructor(){super({key:"boot1"})}init(t){Object.keys(t).length?this.GLOBAL=t:this.GLOBAL={LEVEL_ID:"level_1",KEY_BINDINGS:e,KEYS:{UP:!1,DOWN:!1,LEFT:!1,RIGHT:!1,SLOW:!1}}}preload(){const{LEVEL_ID:e}=this.GLOBAL;this.load.json("player_info","player/kuglis.json"),this.load.json("level_event_info",`levels/${e}/events.json`),this.load.json("level_json_keys",`levels/${e}/json_keys.json`),this.load.json("level_asset_info",`levels/${e}/asset_map.json`)}create(){this.scene.launch("key_tracker",this.GLOBAL),this.scene.start("boot2",this.GLOBAL)}}class P extends Phaser.Scene{constructor(){super({key:"boot2"})}init(e){this.GLOBAL=e}preload(){const{LEVEL_ID:e}=this.GLOBAL;Object.entries(this.cache.json.get("level_json_keys")).forEach(([t,s])=>{this.load.json(t,`levels/${e}/${s}`)})}create(){this.scene.start("fight",this.GLOBAL)}}class k extends Phaser.Scene{constructor(){super({key:"pause"})}init(e){this.GLOBAL=e}update(){const{PAUSE:e}=this.GLOBAL.KEYS;e&&(this.scene.stop,this.scene.resume("fight"))}}class x extends Phaser.Scene{constructor(){super({key:"key_tracker"})}init(e){this.GLOBAL=e}create(){this.cursors=this.input.keyboard.createCursorKeys();const{UP:e,DOWN:t,LEFT:s,RIGHT:i,SLOW:o,FIRE:a,PAUSE:h}=this.GLOBAL.KEY_BINDINGS;this.up=this.createPhaserKey(e),this.down=this.createPhaserKey(t),this.left=this.createPhaserKey(s),this.right=this.createPhaserKey(i),this.slow=this.createPhaserKey(o),this.firing=this.createPhaserKey(a),this.pause=this.createPhaserKey(h),this.pause_pressed=!1}createPhaserKey({type:e,key:t}){switch(e){case"cursor":return this.createPhaserCursorKey(t);case"keyboard":return this.createPhaserKeyboardKey(t)}}createPhaserCursorKey(e){return this.cursors[e]}createPhaserKeyboardKey(e){return this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes[e])}update(){this.setGlobalKey("UP",this.up),this.setGlobalKey("DOWN",this.down),this.setGlobalKey("LEFT",this.left),this.setGlobalKey("RIGHT",this.right),this.setGlobalKey("SLOW",this.slow),this.setGlobalKey("FIRE",this.firing),this.updatePausePossibility("PAUSE",this.pause)}setGlobalKey(e,t){const s=this.GLOBAL.KEYS;t.isDown?s[e]=!0:t.isUp&&(s[e]=!1)}updatePausePossibility(e,t){const s=this.GLOBAL.KEYS;let i=!1;t.isDown?(this.pause_pressed||(i=!0),this.pause_pressed=!0):t.isUp&&(this.pause_pressed=!1),s[e]=i}}const O={type:Phaser.AUTO,width:window.innerWidth,height:window.innerHeight,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[L,P,x,E,k]};window.game=new Phaser.Game(O)}));