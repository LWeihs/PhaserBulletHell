!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e={UP:{type:"cursor",key:"up"},DOWN:{type:"cursor",key:"down"},LEFT:{type:"cursor",key:"left"},RIGHT:{type:"cursor",key:"right"},SLOW:{type:"cursor",key:"shift"},FIRE:{type:"keyboard",key:"Y"},PAUSE:{type:"keyboard",key:"ESC"},ENTER:{type:"keyboard",key:"ENTER"}},t={x:.05,y:.6},s={x:.5,y:.9},i={x:.5,y:.1},o={x_min:0,x_max:1,y_min:0,y_max:.42};function n(e,t,s=!0){return t=s?t:t*Math.PI/180,{x:e*Math.sin(t),y:e*Math.cos(t)}}function r({x:e,y:t},{width:s,height:i}){return{x:e*s,y:t*i}}function a(e,t,s){const i=[];return t.forEach(t=>{i.push(function(e,t,s){let{shot_id:i,x_offset:o,y_offset:r,anchor:a,x_velo:h,y_velo:c,degree:d,speed:l}=t;const{x:u,y:_,width:y,height:m}=s;let p=u+o,v=_+r;switch(a){case"Top":v-=m/2;break;case"Bottom":v+=m/2;break;case"Left":p-=y/2;break;case"Right":p+=y/2}const f=e.physics.add.image(p,v,i);h||({x:h,y:c}=n(l,d,!1));return f.setVelocityX(h),f.setVelocityY(c),f}(e,t,s))}),i}class h{constructor({asset_folder:e,weapon:t,movement:s,invincibility_window:i,lives:o}){this.asset_folder=e,this.weapon={fire_rate:t.fire_rate,shots:t.shots,cooldown:0},this.movement=s,this.invis_frames={max:i,remaining:0},this.cur_lives=o,this.sprite=null}create(e){const{x:t,y:i}=r(s,e.scale),o=e.physics.add.image(t,i,"player_sprite");return o.setCollideWorldBounds(!0),o.setDepth(1),this.sprite=o,o}update(e,t){return this._updateMovement(t),{shots:this._createShots(e,t)}}_updateMovement(e){const{UP:t,DOWN:s,LEFT:i,RIGHT:o,SLOW:n}=e,r=n?this.movement.slowed:this.movement.normal;let a=0,h=0;t&&(h-=r),s&&(h+=r),i&&(a-=r),o&&(a+=r),this.sprite.setVelocityX(a),this.sprite.setVelocityY(h)}_createShots(e,t){const{FIRE:s}=t;if(s){if(this.weapon.cooldown<=0)return this.weapon.cooldown=this.weapon.fire_rate,a(e,this.weapon.shots,this.sprite);this.weapon.cooldown--}return[]}}class c{constructor(e,t,s,i,o){this.id=e,this.sprite=t,this.routines=[],this.cur_routine=0,this.setLimits(s,i,o)}setLimits(e,t,s){let i;switch(this.limits={},e){case"boss":i=o;break;default:i={x_min:void 0,x_max:void 0,y_min:void 0,y_max:void 0}}["x_min","x_max"].forEach(e=>{void 0===i[e]?this.limits[e]=void 0:this.limits[e]=i[e]*t}),["y_min","y_max"].forEach(e=>{void 0===i[e]?this.limits[e]=void 0:this.limits[e]=i[e]*s})}getLimits(){return this.limits}addRoutine(e){this.routines.push(e)}isCurrentRoutineFinished(){return this.getCurrentRoutine().isFinished()}existNextRoutine(){return this.cur_routine<this.routines.length-1}advanceRoutine(){this.cur_routine++}getCurrentRoutine(){return this.routines[this.cur_routine]}getNextMoves(){return this.getCurrentRoutine().getMovesCurrentTime()}disableOngoingXMovement(){this.getCurrentRoutine().disableOngoingXMovement()}disableOngoingYMovement(){this.getCurrentRoutine().disableOngoingYMovement()}getNextShots(){return this.getCurrentRoutine().getShotsCurrentTime()}applyDamage(e){this.getCurrentRoutine().applyDamage(e)}updateCurrentRoutine(){this.getCurrentRoutine().advanceTimer()}}function d(e){return"assets/"+e}class l{constructor(e){this.asset_folder=e.folder,this.parallaxes=e.parallaxes}preload(e,t){this.parallaxes.forEach(({background_id:s})=>{const i=d(`${this.asset_folder}/${t[s]}`);e.load.image(s,i)})}create(e){this.parallaxes.forEach(t=>{this._createParallax(e,t)})}_createParallax(e,t){const s=t.background_id,{height:i}=e.scale,o=e.textures.get(s),{width:n}=o.frames.__BASE,r=e.add.tileSprite(n/2,i/2,n,i,s);r.setAlpha(.5),t.tile_sprite=r}update(){this.parallaxes.forEach(({tile_sprite:e,scroll_speed_x:t,scroll_speed_y:s})=>{t&&(e.tilePositionX-=t),s&&(e.tilePositionY-=s)})}}function u(e,t){return e[t%e.length]}function _(e,t,s){const i=[];let o=e;for(;o<=t;)i.push(o),o+=s;return i}class y{constructor({name:e,loops:t,duration:s,hp:i}){this.name=e,this.loops=t,this.duration=s,this.has_hp=void 0!==i,this.max_hp=i,this.cur_hp=i,this.moves={},this.shots={},this.time=0,this.ongoing_movement={x_acceleration:0,y_acceleration:0,x_velo:0,y_velo:0,can_leave:!0}}applyDamage(e){this.has_hp&&(this.cur_hp-=e)}advanceTimer(){this.time++,this.loops&&this.time>this.duration&&(this.time=0)}isFinished(){return this.time>this.duration||this.has_hp&&this.cur_hp<=0}addMovesByDescription(e){switch(e.type){case"Stop":this.addStopMoves(e.times);break;case"Randomized":this.addMovesFromRandomizedMoves(e);break;case"Fixed":default:this.addMovesFromFixedMoves(e)}}addMovesFromFixedMoves(e){e.can_leave=!0;const t=this.reduceMoveDescToMove(e);e.times.forEach(e=>{this.addSingleMove(t,e)})}addMovesFromRandomizedMoves(e){e.can_leave=!1;const t=this.reduceMoveDescToMove(e);e.times.forEach(e=>{this.addSingleMove(t,e)})}addStopMoves(e){const t={type:"Fixed",x_acceleration:0,y_acceleration:0,x_velo:0,y_velo:0,can_leave:!0};e.forEach(e=>{this.addSingleMove(t,e)})}reduceMoveDescToMove(e){const t=Object.assign({},e);return delete t.times,t}addSingleMove(e,t){this.moves[t]=e}getMovesCurrentTime(){const e=this.moves[this.time];if(e)switch(e.type){case"Fixed":this.setOngoingMovement(e);break;case"Randomized":this.setOngoingMovementFromRandom(e)}return this.ongoing_movement}setOngoingMovementFromRandom(e){const{x_velo_range:t,y_velo_range:s}=e;e.x_velo=Phaser.Math.Between(t[0],t[1]),e.y_velo=Phaser.Math.Between(s[0],s[1]),this.setOngoingMovement(e)}setOngoingMovement(e){this.ongoing_movement={x_acceleration:e.x_acceleration,y_acceleration:e.y_acceleration,x_velo:e.x_velo,y_velo:e.y_velo,can_leave:e.can_leave}}disableOngoingXMovement(){this.ongoing_movement.x_acceleration=0,this.ongoing_movement.x_velo=0}disableOngoingYMovement(){this.ongoing_movement.y_acceleration=0,this.ongoing_movement.y_velo=0}addShotsByDescription(e){switch(e.type){case"ShotArray":this.addShotsFromShotArray(e);break;case"ShotRow":this.addShotsFromShotRow(e);break;case"ShotCircle":this.addShotsFromShotCircle(e);break;case"ShotTwister":this.addShotsFromShotTwister(e)}}addShotsFromShotArray(e){const{times:t,shots:s,anchor:i}=e;s.forEach(e=>{t.forEach(t=>{this.addSingleShot(e,t,i)})})}addShotsFromShotRow(e){let{nr_shots:t,anchor:s,shot_ids:i,speeds:o,degrees:n,x_offset_start:r,x_offset_end:a,y_offset:h,continuous:c,times:d,interval:l,start_time:y}=e;c&&(d=_(y,this.duration,l));const m=(a-r)/t;for(let e=0;e<t;++e){const t={shot_id:u(i,e),speed:u(o,e),degree:u(n,e),x_offset:r+m*e,y_offset:h};d.forEach(e=>{this.addSingleShot(t,e,s)})}}addShotsFromShotCircle(e){let{nr_shots:t,anchor:s,shot_ids:i,speeds:o,shot_spread:r,degrees:a,x_offset:h,y_offset:c,continuous:d,times:l,interval:y,start_time:m,start_degree:p,end_degree:v,radius:f}=e;d&&(l=_(m,this.duration,y)),p=void 0!==p?p:0,v=void 0!==v?v:360;const g=(v-p)/t;for(let e=0;e<t;++e){const t=p+g*e,{x:d,y:_}=n(f,t,!1),y=r?t:u(a,e),m={shot_id:u(i,e),speed:u(o,e),degree:y,x_offset:h+d,y_offset:c+_};l.forEach(e=>{this.addSingleShot(m,e,s)})}}addShotsFromShotTwister(e){let{anchor:t,x_offset:s,y_offset:i,speeds:o,start_degree:r,finish_degree:a,direction:h,degree_offset:c,shot_ids:d,start_time:l,time_interval:_,radius:y,continuous:m,repeat_interval:p}=e;const v=a-r,f=Math.floor(v/c);if(f<=0)return;const g=(f-1)*_,E="clockwise"===h?1:-1;let x=r,k=l;for(let e=0;e<f;++e){const{x:r,y:a}=n(y,x,!1),h={shot_id:u(d,e),speed:u(o,e),degree:x,x_offset:s+r,y_offset:i+a};let l=[];if(m){let e=k;for(;e<this.duration;)l.push(e),e+=g+p}else l.push(k);l.forEach(e=>{this.addSingleShot(h,e,t)}),x+=E*c,k+=_}}addSingleShot({shot_id:e,speed:t,degree:s,x_offset:i,y_offset:o},r,a){const{x:h,y:c}=n(t,s,!1);this.shots.hasOwnProperty(r)||(this.shots[r]=[]),this.shots[r].push({shot_id:e,x_offset:i,y_offset:o,anchor:a,x_velo:h,y_velo:c})}getShotsCurrentTime(){return this.shots[this.time]}}let m,p,v,f=0;const g={},E=[],x={};let k=0;class b extends Phaser.Scene{constructor(){super({key:"fight"})}init(e){this.GLOBAL=e,this.player=new h(this.cache.json.get("player_info"));const t=this.cache.json.get("level_base_info");this.background=new l(t.background)}preload(){this.preloadLevelAssets(),this.setUpEventTimeline();const e=this.cache.json.get("player_info"),{asset_folder:t}=e;this.load.image("player_sprite",d(t+"/sprite.png")),this.load.image("player_bullet",d(t+"/bullet.png"));const s=this.cache.json.get("level_asset_info");this.background.preload(this,s)}preloadLevelAssets(){Object.entries(this.cache.json.get("level_asset_info")).forEach(([e,t])=>{this.load.image(e,d(t))})}setUpEventTimeline(){this.cache.json.get("level_event_info").forEach(e=>{switch(e.type){case"enemy":this.addEnemyEvent(e)}})}addEnemyEvent({time:e,id:t}){g.hasOwnProperty(e)||(g[e]=[]),g[e].push(t)}create(){this.background.create(this),m=this.physics.add.group(),p=this.physics.add.group(),v=this.physics.add.group();const e=this.player.create(this);this.physics.add.overlap(e,v,this.handlePlayerHit,null,this),this.physics.add.overlap(e,p,this.handlePlayerHit,null,this)}handlePlayerHit(){k?k--:k=60}update(){this.pauseGameIfRequested(),this.background.update();const{shots:e}=this.player.update(this,this.GLOBAL.KEY_TRACKER.active_keys);this.createNewEnemies(),this.updateEnemies(),this.removeBulletsOutOfBounds(m),this.removeBulletsOutOfBounds(p),f++}pauseGameIfRequested(){const{PAUSE:e}=this.GLOBAL.KEY_TRACKER.active_keys;e&&this.pauseGame()}pauseGame(){this.GLOBAL.PAUSE_SCENE_LAUNCHED?this.scene.wake("pause"):(this.scene.launch("pause",this.GLOBAL),this.GLOBAL.PAUSE_SCENE_LAUNCHED=!0),this.scene.pause()}createNewEnemies(){g[f]&&g[f].forEach(e=>{const t=this.createEnemySprite(e);v.add(t),x[e]=t;const s=this.createEnemyInfo(e,t);E.push(s)})}createEnemySprite(e){const{x:t,y:s}=r(i,this.scale),o=this.physics.add.image(t,s,e);return o.setDepth(1),o}createEnemyInfo(e,t){const{width:s,height:i}=this.scale,o=this.cache.json.get(e),n=new c(e,t,o.type,s,i);return o.routines.forEach(({name:e})=>{n.addRoutine(function(e){const t=new y(e);return e.moves&&e.moves.forEach(e=>{t.addMovesByDescription(e)}),e.shots&&e.shots.forEach(e=>{t.addShotsByDescription(e)}),t}(this.cache.json.get(e)))}),n}updateEnemies(){E.forEach(e=>{const t=x[e.id];e.isCurrentRoutineFinished()&&e.existNextRoutine()&&e.advanceRoutine(),this.updateEnemyMovement(t,e);const s=e.getNextShots();s&&s.forEach(e=>{this.createNewEnemyShot(e,t)}),e.updateCurrentRoutine()})}updateEnemyMovement(e,t){const s=t.getNextMoves();let{x_acceleration:i,y_acceleration:o,x_velo:n,y_velo:r,can_leave:a}=s;if(!a){const s=t.getLimits(),{possible:i,rem:o}=function(e,{x_min:t,x_max:s}){const i={possible:!0,rem:void 0},o=function(e){return e.body._dx}(e);return o<0?(i.rem=-function(e,t){return e.x-e.body.halfWidth-t}(e,t),o<i.rem&&(i.possible=!1)):o>0&&(i.rem=function(e,t){return t-(e.x+e.body.halfWidth)}(e,s),o>i.rem&&(i.possible=!1)),i}(e,s);i||(t.disableOngoingXMovement(),e.x+=o,n=0);const{possible:a,rem:h}=function(e,{y_min:t,y_max:s}){const i={possible:!0,rem:void 0},o=function(e){return e.body._dy}(e);return o<0?(i.rem=-function(e,t){return e.y-e.body.halfHeight-t}(e,t),o<i.rem&&(i.possible=!1)):o>0&&(i.rem=function(e,t){return t-(e.y+e.body.halfHeight)}(e,s),o>i.rem&&(i.possible=!1)),i}(e,s);a||(t.disableOngoingYMovement(),e.y+=h,r=0)}e.setVelocityX(n),e.setVelocityY(r),e.setAccelerationX(i),e.setAccelerationY(o)}createNewEnemyShot(e,{x:t,y:s,width:i,height:o}){const{shot_id:n,x_offset:r,y_offset:a}=e;let h=t+r,c=s+a;switch(e.anchor){case"Top":c-=o/2;break;case"Bottom":c+=o/2;break;case"Left":h-=i/2;break;case"Right":h+=i/2}const d=this.physics.add.image(h,c,n);p.add(d);const{x_velo:l,y_velo:u}=e;d.setVelocityX(l),d.setVelocityY(u)}removeBulletsOutOfBounds(e){const{width:t,height:s}=this.scale;e.children.entries.forEach(e=>{const{x:i,y:o,width:n,height:r}=e;(i+n<0||i-n>t||o+r<0||o-r>s)&&e.destroy()})}}const S={UP:!1,DOWN:!1,LEFT:!1,RIGHT:!1,FIRE:!1,SLOW:!1,PAUSE:!1,ENTER:!1};class K{constructor(){this.active_keys=Object.assign({},S),this.pressed_keys=Object.assign({},S),this.first_pressed=Object.assign({},S),this.blocked=Object.assign({},S)}setKeyActivity(e,t){t?this.setKeyActive(e):this.setKeyInactive(e)}setKeyActive(e){this.active_keys[e]=!0}setKeyInactive(e){this.active_keys[e]=!1}setKeyPressed(e,t){t?this.markKeyDown(e):this.markKeyUp(e)}markKeyDown(e){this.pressed_keys[e]?this.first_pressed[e]=!1:(this.pressed_keys[e]=!0,this.first_pressed[e]=!0)}markKeyUp(e){this.pressed_keys[e]=!1,this.first_pressed[e]=!1}removeAllBlocks(){this.blocked=Object.assign({},S)}setKeyBlocked(e){this.blocked[e]=!0}setKeyUnblocked(e){this.blocked[e]=!1}debounceKey(e,t,s){return this.setKeyBlocked(e),s.time.addEvent({delay:t,callback:()=>{this.setKeyUnblocked(e)}})}}class O extends Phaser.Scene{constructor(){super({key:"boot1"})}init(t){Object.keys(t).length?this.GLOBAL=t:this.GLOBAL={LEVEL_ID:"level_1",KEY_BINDINGS:e,KEY_TRACKER:new K,PAUSE_SCENE_LAUNCHED:!1}}preload(){const{LEVEL_ID:e}=this.GLOBAL;this.load.json("player_info","player/kuglis.json"),this.load.json("level_base_info",`levels/${e}/level_info.json`),this.load.json("level_event_info",`levels/${e}/events.json`),this.load.json("level_json_keys",`levels/${e}/json_keys.json`),this.load.json("level_asset_info",`levels/${e}/asset_map.json`)}create(){this.scene.launch("key_tracker",this.GLOBAL),this.scene.start("boot2",this.GLOBAL)}}class L extends Phaser.Scene{constructor(){super({key:"boot2"})}init(e){this.GLOBAL=e}preload(){const{LEVEL_ID:e}=this.GLOBAL;Object.entries(this.cache.json.get("level_json_keys")).forEach(([t,s])=>{this.load.json(t,`levels/${e}/${s}`)})}create(){this.scene.start("fight",this.GLOBAL)}}const w={continue:{selected:"continue_selected",unselected:"continue_unselected"},restart:{selected:"restart_selected",unselected:"restart_unselected"},exit:{selected:"exit_selected",unselected:"exit_unselected"}};class R extends Phaser.Scene{constructor(){super({key:"pause"})}init(e){this.GLOBAL=e,this.menu_items=["continue","restart","exit"],this.menu_images={},this.current_idx=0,this.time_events={},this.next_item_position=r(t,this.scale),this.item_y_offset=.01*this.scale.height,this.can_accept_fire_key=!1,this.can_accept_enter_key=!1}incrementMenuIndex(){this.current_idx++,this.current_idx===this.menu_items.length&&(this.current_idx=0)}decrementMenuIndex(){this.current_idx--,this.current_idx<0&&(this.current_idx=this.menu_items.length-1)}preload(){this.load.image("overlay",this.makeAssetPath("overlay.png")),Object.values(w).forEach(({selected:e,unselected:t})=>{[e,t].forEach(e=>{this.load.image(e,this.makeAssetPath(e+".png"))})})}makeAssetPath(e){return"assets/menu/"+e}create(){this.createOverlay();for(const e in w){const t=this.createMenuItem(e);this.moveNextItemPosition(t)}this.setSceneToFreshState(),this.events.on("wake",()=>{this.setSceneToFreshState()})}setSceneToFreshState(){this.current_idx=0,this.showCorrectSelection(),this.can_accept_fire_key=!1,this.can_accept_enter_key=!1}createOverlay(){const{width:e,height:t}=this.scale,s=this.add.tileSprite(e/2,t/2,e,t,"overlay");s.setAlpha(.94),this.overlay=s}createMenuItem(e){const{selected:t,unselected:s}=w[e],{x:i,y:o}=this.next_item_position,n=this.add.image(i,o,t).setOrigin(0),r=this.add.image(i,o,s).setOrigin(0);return this.menu_images[e]={selected:n,unselected:r},n}moveNextItemPosition(e){this.next_item_position.y+=this.item_y_offset+e.height}update(){const e=this.GLOBAL.KEY_TRACKER,{PAUSE:t}=e.active_keys;t?this.endPause():(this.changeProceedKeysAcceptance(),this.handleMenuItemSelection()||(this.updateMenuInformation(),this.showCorrectSelection()))}changeProceedKeysAcceptance(){const e=this.GLOBAL.KEY_TRACKER,{FIRE:t,ENTER:s}=e.pressed_keys;t||(this.can_accept_fire_key=!0),s||(this.can_accept_enter_key=!0)}handleMenuItemSelection(){const{FIRE:e,ENTER:t}=this.GLOBAL.KEY_TRACKER.active_keys,s=e&&this.can_accept_fire_key,i=t&&this.can_accept_enter_key;return!(!s&&!i)&&(this.handleCurrentMenuItem(),!0)}handleCurrentMenuItem(){switch(this.menu_items[this.current_idx]){case"continue":this.endPause()}}updateMenuInformation(){this.checkDirectionForMenuUpdate("UP"),this.checkDirectionForMenuUpdate("DOWN")}checkDirectionForMenuUpdate(e){let t;switch(e){case"UP":t=this.decrementMenuIndex.bind(this);break;case"DOWN":t=this.incrementMenuIndex.bind(this)}const s=this.GLOBAL.KEY_TRACKER,i=s.pressed_keys[e],o=s.first_pressed[e],n=s.active_keys[e];if(!i)return s.setKeyUnblocked(e),void this.clearTimeEventsOfKey(e);if(n){const i=o?500:250;t(),this.addDebounceEvent(s,e,i)}}addDebounceEvent(e,t,s){const i=e.debounceKey(t,s,this);this.time_events[t]||(this.time_events[t]=[]),this.time_events[t].push(i)}clearTimeEvents(){for(const e in this.time_events)this.clearTimeEventsOfKey(e)}clearTimeEventsOfKey(e){this.time_events.hasOwnProperty(e)&&this.time_events[e].forEach(e=>{e.destroy()})}showCorrectSelection(){const e=this.menu_items[this.current_idx];for(const t in this.menu_images){let s,i;const{selected:o,unselected:n}=this.menu_images[t];e===t?(s=o,i=n):(s=n,i=o),s.visible=!0,i.visible=!1}}endPause(){this.clearTimeEvents(),this.GLOBAL.KEY_TRACKER.removeAllBlocks(),this.scene.sleep(),this.scene.resume("fight")}}class A extends Phaser.Scene{constructor(){super({key:"key_tracker"})}init(e){this.GLOBAL=e}create(){this.cursors=this.input.keyboard.createCursorKeys();const{UP:e,DOWN:t,LEFT:s,RIGHT:i,SLOW:o,FIRE:n,PAUSE:r,ENTER:a}=this.GLOBAL.KEY_BINDINGS;this.up=this.createPhaserKey(e),this.down=this.createPhaserKey(t),this.left=this.createPhaserKey(s),this.right=this.createPhaserKey(i),this.slow=this.createPhaserKey(o),this.firing=this.createPhaserKey(n),this.enter=this.createPhaserKey(a),this.pause=this.createPhaserKey(r),this.pause_pressed=!1}createPhaserKey({type:e,key:t}){switch(e){case"cursor":return this.createPhaserCursorKey(t);case"keyboard":return this.createPhaserKeyboardKey(t)}}createPhaserCursorKey(e){return this.cursors[e]}createPhaserKeyboardKey(e){return this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes[e])}update(){this.setGlobalKey("UP",this.up),this.setGlobalKey("DOWN",this.down),this.setGlobalKey("LEFT",this.left),this.setGlobalKey("RIGHT",this.right),this.setGlobalKey("SLOW",this.slow),this.setGlobalKey("FIRE",this.firing),this.setGlobalKey("ENTER",this.enter),this.updatePausePossibility("PAUSE",this.pause)}setGlobalKey(e,t){const{pressed:s,active:i}=this.determineNextKeyState(e,t);this.setKeyTrackerNextKeyState(e,s,i)}updatePausePossibility(e,t){const{pressed:s,active:i}=this.determineNextKeyState(e,t);let o=!1;i?(this.pause_pressed||(o=!0),this.pause_pressed=!0):this.pause_pressed=!1,this.setKeyTrackerNextKeyState(e,s,o)}determineNextKeyState(e,t){const s=t.isDown,i={pressed:s,active:s},{blocked:o}=this.GLOBAL.KEY_TRACKER;return o[e]&&(i.active=!1),i}setKeyTrackerNextKeyState(e,t,s){const i=this.GLOBAL.KEY_TRACKER;i.setKeyPressed(e,t),i.setKeyActivity(e,s)}}const P={type:Phaser.AUTO,width:window.innerWidth,height:window.innerHeight,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[O,L,A,b,R]};window.game=new Phaser.Game(P)}));